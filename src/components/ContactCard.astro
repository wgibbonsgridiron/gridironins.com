---
interface Props {
  icon: 'email' | 'phone' | 'location';
  title: string;
  value: string;
  href?: string;
  subtitle?: string;
  class?: string;
}

const { icon, title, value, href, subtitle, class: className = '' } = Astro.props;

const icons = {
  email: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>',
  phone: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>',
  location: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>'
};
---

<div class={`p-6 rounded-xl border border-slate-200 dark:border-slate-700 bg-white dark:bg-slate-800 hover:shadow-lg transition-all ${className}`}>
  <div class="w-12 h-12 rounded-lg bg-brand-100 dark:bg-brand-900 flex items-center justify-center mb-4">
    <svg class="w-6 h-6 text-brand-600 dark:text-brand-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <Fragment set:html={icons[icon]} />
    </svg>
  </div>
  <h3 class="font-bold text-lg mb-2 text-slate-900 dark:text-slate-100">{title}</h3>
  {href ? (
    <a href={href} class="text-brand-600 dark:text-brand-400 hover:underline font-medium">
      {value}
    </a>
  ) : (
    <p class="text-slate-700 dark:text-slate-300 font-medium">{value}</p>
  )}
  {subtitle && (
    <p class="text-sm text-slate-500 dark:text-slate-400 mt-2">{subtitle}</p>
  )}
</div>
